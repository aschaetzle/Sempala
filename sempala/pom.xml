<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.uni_freiburg.informatik.dbis.sempala</groupId>
        <artifactId>sempala-parent</artifactId>
        <version>1.0</version>
    </parent>

    <artifactId>sempala</artifactId>
    <packaging>jar</packaging>
    <name>Sempala</name>

    <dependencies>
        <dependency>
            <groupId>de.uni_freiburg.informatik.dbis.sempala</groupId>
            <artifactId>sempala-loader</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.uni_freiburg.informatik.dbis.sempala</groupId>
            <artifactId>sempala-translator</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

	<build>
		<plugins>

			<!-- Build a jar, set main class and class path in manifest and put jar in ./dist/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>de.uni_freiburg.informatik.dbis.sempala.single_jar.Main</mainClass>
						</manifest>
					</archive>
					<outputDirectory>${project.basedir}/dist</outputDirectory>
				</configuration>
			</plugin>

			<!-- Put dependencies in ./dist/lib -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/dist/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<silent>true</silent>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Add ./dist to clean phase -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>dist</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- Build a jar with dependencies 
			
			Maven shade make major problems with log4j. I have not really a clue
			why and since it is not strictly a goal of my project is will stop 
			trying it, although it would be nice to have e stressless jar to
			pass/scp around in the cluster.
			I will leave the section commented, if someone wants to continue to 
			work on it. 
			If you are the one start with the crooked classpath in the final
			uberjar that is somehow copied from the two dependencies. (loader, 
			translator)
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${project.basedir}/dist</outputDirectory>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
					<minimizeJar>true</minimizeJar>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<mainClass>de.uni_freiburg.informatik.dbis.sempala.single_jar.Main</mainClass>
							</manifestEntries>
						</transformer>
					</transformers>
				</configuration>
			</plugin>-->

		</plugins>
	</build>
</project>
